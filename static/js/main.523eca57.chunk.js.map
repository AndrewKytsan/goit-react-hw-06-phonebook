{"version":3,"sources":["components/ContactItem/ContactItem.module.scss","App.module.scss","components/Filter/Filter.module.scss","components/ContactList/ContactList.module.scss","components/ContactForm/ContactForm.module.scss","store/phonebook/phonebook-actions.js","store/phonebook/phonebook-reducer.js","store/store.js","store/phonebook/phonebook-selector.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContacItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuid","deleteContact","changeFilter","items","createReducer","state","filter","_","combineReducers","phonebookPersistConfig","key","storage","blacklist","configStore","configureStore","reducer","contacts","persistReducer","phonebookReducer","middleware","getDefaultMiddleware","serializableCheck","concat","logger","devTools","process","store","persistor","persistStore","getContact","getFilter","getFilteredContacts","toLowerCase","contact","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","inputHandler","e","currentTarget","value","className","s","form","autoComplete","onSubmit","preventDefault","map","alert","formLabel","formInput","type","pattern","required","onChange","formBtn","ContactItem","onRemoveContact","listItem","listItemText","listItemButton","onClick","ContactList","removeContact","contactList","Filter","filterValue","filterLabel","filterInput","target","App","container","mainTitle","ReactDOM","render","StrictMode","loading","color","height","width","document","getElementById"],"mappings":"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","file":"static/js/main.523eca57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactItem_listItem__191ju\",\"listItemText\":\"ContactItem_listItemText__3JtfP\",\"listItemButton\":\"ContactItem_listItemButton__amsH_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3YiU0\",\"mainTitle\":\"App_mainTitle__3UOo-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__2hg8H\",\"filterInput\":\"Filter_filterInput__2RCw_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3G-1u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"ContactForm_formInput__3TboL\",\"formLabel\":\"ContactForm_formLabel__32zn3\",\"formBtn\":\"ContactForm_formBtn__nvkKi\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst addContact = createAction('contact/add', ({ name, number }) => ({\r\n    payload: {\r\n        id: uuid(),\r\n        name,\r\n        number,\r\n    },\r\n}));\r\n\r\nconst deleteContact = createAction('contact/delete');\r\nconst changeFilter = createAction('contact/changeFilter');\r\n\r\nexport { addContact, deleteContact, changeFilter };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, changeFilter } from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n    [addContact]: (state, { payload }) => [...state, payload],\r\n    [deleteContact]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\n\r\nconst phonebookPersistConfig = {\r\n    key: 'contact',\r\n    storage,\r\n    blacklist: ['filter'],\r\n};\r\n\r\nconst configStore = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(phonebookPersistConfig, phonebookReducer),\r\n    },\r\n    middleware: getDefaultMiddleware =>\r\n        getDefaultMiddleware({ serializableCheck: false }).concat(logger),\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(configStore);\r\n\r\nconst store = { configStore, persistor };\r\nexport default store;\r\n","export const getContact = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = state => {\r\n    const contacts = getContact(state);\r\n    const filter = getFilter(state).toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(filter),\r\n    );\r\n};\r\n","import { useState } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { getContact } from '../../store/phonebook/phonebook-selector.js';\r\nimport { addContact } from '../../store/phonebook/phonebook-actions';\r\n\r\nimport s from './ContactForm.module.scss';\r\n\r\nexport default function ContactForm() {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const contacts = useSelector(getContact);\r\n    const dispatch = useDispatch();\r\n\r\n    const formHandler = e => {\r\n        e.preventDefault();\r\n        contacts.map(contact => contact.name).includes(name)\r\n            ? alert(`This ${name} is already in your contacts.`)\r\n            : dispatch(addContact({ name, number }));\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n\r\n    const inputHandler = e => {\r\n        const { name, value } = e.currentTarget;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form className={s.form} autoComplete=\"off\" onSubmit={formHandler}>\r\n            <span className={s.formLabel}>\r\n                Name\r\n                <br />\r\n                <input\r\n                    className={s.formInput}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    value={name}\r\n                    required\r\n                    onChange={inputHandler}\r\n                />\r\n            </span>\r\n            <br />\r\n            <span className={s.formLabel}>\r\n                Number\r\n                <br />\r\n                <input\r\n                    className={s.formInput}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    value={number}\r\n                    onChange={inputHandler}\r\n                    required\r\n                />\r\n            </span>\r\n            <br />\r\n            <button type=\"submit\" className={s.formBtn}>\r\n                Add contact\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport s from './ContactItem.module.scss';\r\n\r\nfunction ContactItem({ contact, onRemoveContact }) {\r\n    return (\r\n        <li className={s.listItem}>\r\n            <p className={s.listItemText}>\r\n                {contact.name} : {contact.number}\r\n            </p>\r\n            <button\r\n                className={s.listItemButton}\r\n                type=\"button\"\r\n                onClick={() => onRemoveContact(contact.id)}\r\n            >\r\n                Delete\r\n            </button>\r\n        </li>\r\n    );\r\n}\r\n\r\nContactItem.propTypes = {\r\n    contact: PropTypes.object,\r\n    onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { deleteContact } from '../../store/phonebook/phonebook-actions';\r\nimport { getFilteredContacts } from '../../store/phonebook/phonebook-selector';\r\n\r\nimport s from './ContactList.module.scss';\r\n\r\nimport ContactItem from '../ContactItem/ContacItem';\r\n\r\nfunction ContactList() {\r\n    const contacts = useSelector(getFilteredContacts);\r\n    const dispatch = useDispatch();\r\n\r\n    const removeContact = id => dispatch(deleteContact(id));\r\n\r\n    return (\r\n        <ul className={s.contactList}>\r\n            {contacts.map(contact => (\r\n                <ContactItem\r\n                    key={contact.id}\r\n                    contact={contact}\r\n                    onRemoveContact={removeContact}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ContactList;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { getFilter } from '../../store/phonebook/phonebook-selector';\r\nimport { changeFilter } from '../../store/phonebook/phonebook-actions';\r\n\r\nimport s from './Filter.module.scss';\r\n\r\nfunction Filter() {\r\n    const filterValue = useSelector(getFilter);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <form>\r\n            <span className={s.filterLabel}>\r\n                Find contacts by name\r\n                <br />\r\n                <input\r\n                    className={s.filterInput}\r\n                    type=\"text\"\r\n                    value={filterValue}\r\n                    onChange={e => dispatch(changeFilter(e.target.value))}\r\n                />\r\n            </span>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Filter;\r\n","import ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nimport s from './App.module.scss';\nexport default function App() {\n    return (\n        <div className={s.container}>\n            <h1 className={s.mainTitle}>Phonebook</h1>\n            <ContactForm />\n            <h2 className={s.mainTitle}>Contacts</h2>\n            <Filter />\n            <ContactList />\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\n\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport store from './store/store';\n\nimport { Puff } from 'react-loader-spinner';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store.configStore}>\n            <PersistGate\n                loading={\n                    <Puff type=\"Puff\" color=\"#00BFFF\" height={80} width={80} />\n                }\n                persistor={store.persistor}\n            >\n                <App />\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}